<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TEG.SSO.WebAPI</name>
    </assembly>
    <members>
        <member name="T:TEG.SSO.WebAPI.Controllers.AccountController">
            <summary>
            账号相关模块
            </summary>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AccountController.LoginAsync(TEG.SSO.Entity.Param.UserLogin)">
            <summary>
            登录
            </summary>
            <param name="userLogin"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AccountController.LogoutAsync(TEG.SSO.Entity.Param.RequestBase)">
            <summary>
            注销
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AccountController.ChangePasswordAsync(TEG.SSO.Entity.Param.ChangePassword)">
            <summary>
            当前用户通过旧密码修改自己密码
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AccountController.ChangePasswordByUserIdAsync(TEG.SSO.Entity.Param.AdminChangePassword)">
            <summary>
            管理员修改指定用户的密码
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AccountController.RetrievePasswordAsync(TEG.SSO.Entity.Param.RetrievePassword)">
            <summary>
            找回密码,发送验证码。
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AccountController.ResetPasswordAsync(TEG.SSO.Entity.Param.ResetPassword)">
            <summary>
            通过邮件重置密码
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AccountController.GetCurrentUserInfo(TEG.SSO.Entity.Param.RequestBase)">
            <summary>
             获取当前用户信息，以及菜单权限信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AccountController.GetUserEmailByAccountNameAsync(TEG.SSO.Entity.Param.RequestBase{System.String})">
            <summary>
            获取指定账号的邮箱
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AccountController.GetUserInfoByIDsAsync(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            获取指定用户的信息(包括角色/部门信息)
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AccountController.GetUserByPage(TEG.SSO.Entity.Param.GetUserPage)">
            <summary>
            分页获取用户信息列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AccountController.CheckAccountIsExistAsync(TEG.SSO.Entity.Param.AccountNameParam)">
            <summary>
            检查登录名是否已被占用
            </summary>
            <param name="param"></param>
            <returns>是否存在用户名：true-存在，false-不存在</returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AccountController.UpdateUserAsync(TEG.SSO.Entity.Param.UpdateUser)">
            <summary>
            更新用户信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AccountController.AddUserAsync(TEG.SSO.Entity.Param.NewUserList)">
            <summary>
            新增用户
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AccountController.DisableUserAsync(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            禁用指定用户
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AccountController.EnableUserAsync(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            启用指定用户
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AccountController.DeleteUserAsync(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            删除指定用户
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AppSyetemController.GetAllAppSystem(TEG.SSO.Entity.Param.GetAppSystemPage)">
            <summary>
            分页获取系统信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AppSyetemController.GetEnableAppSystemListAsync(TEG.SSO.Entity.Param.RequestBase)">
            <summary>
            获取未禁用的业务系统下拉列表数据
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AppSyetemController.GetAppSystemByIDsAsync(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            获取指定的业务系统信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AppSyetemController.AddAppSystemAsync(TEG.SSO.Entity.Param.AddAppSystem)">
            <summary>
            新增业务系统信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AppSyetemController.DeleteAppSystemAsync(TEG.SSO.Entity.Param.DeleteTree)">
            <summary>
            删除指定业务系统信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AppSyetemController.DisableAppSystemAsync(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            禁用指定业务系统信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AppSyetemController.EnableAppSystemAsync(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            启用指定业务系统信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.AppSyetemController.UpdateAppSystemAsync(TEG.SSO.Entity.Param.UpdateAppSystem)">
            <summary>
            更新业务系统信息
            </summary>
            <returns></returns>
        </member>
        <member name="F:TEG.SSO.WebAPI.Controllers.BaseController.CurrentUser">
            <summary>
            当前用户信息
            </summary>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.CheckPermissionController.Index(TEG.SSO.Entity.Param.CheckPermission)">
            <summary>
            校验当前用户在指定code中的权限值。todo:反复测试。。
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.LogController.GetErrorLogPage(TEG.SSO.Entity.Param.PageParam)">
            <summary>
            分页查询错误日志
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.LogController.GetErrorLogInfo(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            根据id查询指定错误日志
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.LogController.GetOperationLogPage(TEG.SSO.Entity.Param.GetOperationLogPage)">
            <summary>
            分页查询操作日志
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.LogController.GetOperationLogInfo(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            根据id查询指定操作日志
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.MenuController.GetMenuPage(TEG.SSO.Entity.Param.GetMenuPage)">
            <summary>
            分页获取菜单信息列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.MenuController.GetMenuByIDsAsync(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            根据id获取指定菜单信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.MenuController.GetAllMenuTreesBySystemCode(TEG.SSO.Entity.Param.SystemCode)">
            <summary>
            获取指定系统下所有菜单树状信息（包含菜单下的数据和功能）//角色赋权限tree数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.MenuController.GetCurrentSysMenuTrees(TEG.SSO.Entity.Param.RequestBase)">
            <summary>
            获取当前登录系统的所有菜单树信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.MenuController.DeleteMenuAsync(TEG.SSO.Entity.Param.DeleteTree)">
            <summary>
            删除指定菜单.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.MenuController.AddMenuAsync(TEG.SSO.Entity.Param.AddMenu)">
            <summary>
            新增菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.MenuController.UpdateMenuAsync(TEG.SSO.Entity.Param.UpdateMenu)">
            <summary>
            更新指定菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.MenuController.GetAuthObjectPage(TEG.SSO.Entity.Param.GetAuthObjPage)">
            <summary>
            分页获取数据功能项
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.MenuController.GetAuthObjectByIDsAsync(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            获取指定数据功能项
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.MenuController.GetAuthObjectByMenuIDsAsync(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            获取指定菜单下的数据功能项
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.MenuController.DeleteAuthObjectAsync(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            删除指定数据功能项
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.MenuController.AddAuthObjectAsync(TEG.SSO.Entity.Param.AddAuthObj)">
            <summary>
            新增数据功能项
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.MenuController.UpdateAuthObjectsAsync(TEG.SSO.Entity.Param.UpdateAuthObj)">
            <summary>
            更新数据功能项
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.OrganizationController.GetDeptsAndChildrenByIDsAsync(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            根据id获取部门和下级部门信息。 
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.OrganizationController.GetDeptsByIDsAsync(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            根据id获取部门信息 
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.OrganizationController.GetCurrentUserDeptsAsync(TEG.SSO.Entity.Param.RequestBase)">
            <summary>
            获取当前用户部门信息，查询至顶级节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.OrganizationController.GetOrganizationByPage(TEG.SSO.Entity.DTO.GetDeptPage)">
            <summary>
            分页获取部门信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.OrganizationController.UpdateOrganizationsAsync(TEG.SSO.Entity.Param.UpdateDept)">
            <summary>
            更新部门信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.OrganizationController.AddDeptInfosAsync(TEG.SSO.Entity.Param.AddDept)">
            <summary>
            新增部门信息list
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.OrganizationController.DeleteDeptsAsync(TEG.SSO.Entity.Param.DeleteTree)">
            <summary>
            删除指定部门信息，用参数区分：有下级部门的是否需要先删除下级部门
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.OrganizationController.UpdateUserDeptRelAsync(TEG.SSO.Entity.Param.UpdateUserDeptRel)">
             <summary>
            更新用户部门信息，删除原有的信息之后新增
             </summary>
             <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.RoleController.GetRolePage(TEG.SSO.Entity.Param.GetRolePage)">
            <summary>
            分页获取角色信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.RoleController.GetRoleByIDsAsync(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            获取角色信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.RoleController.AddRolesAsync(TEG.SSO.Entity.Param.AddRole)">
            <summary>
            新增角色。角色名称不可重复
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.RoleController.UpdateRolesAsync(TEG.SSO.Entity.Param.UpdateRole)">
            <summary>
            更新角色信息。
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.RoleController.DeleteRolesAsync(TEG.SSO.Entity.Param.DeleteTree)">
            <summary>
            删除角色
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.SecurityQuestionController.GetCurrentQuestionAsync(TEG.SSO.Entity.Param.PasswordRequest)">
            <summary>
            获取当前用户密保问题
            </summary>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.SecurityQuestionController.GetAllSecurityQuestionAsync(TEG.SSO.Entity.Param.RequestBase)">
            <summary>
            获取密保问题列表
            </summary>
            <param name="param"></param>
            <returns></returns>      
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.SecurityQuestionController.AddSecurityQuestionAsync(TEG.SSO.Entity.Param.AddNewQuestion)">
            <summary>
            增加新的密保问题选项
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.SecurityQuestionController.GetQuestionByIDsAsync(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            查询指定密保问题选项
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.SecurityQuestionController.UpdateQuestionAsync(TEG.SSO.Entity.Param.UpdateQuestion)">
            <summary>
            更新密保问题
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.SecurityQuestionController.DeleteSecurityQuestionAsync(TEG.SSO.Entity.Param.RequestID)">
            <summary>
            删除密保问题选项
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.SecurityQuestionController.SetSecurityQuestionAsync(TEG.SSO.Entity.Param.SetSecurityQuestion)">
            <summary>
            设置密保问题
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:TEG.SSO.WebAPI.Controllers.SecurityQuestionController.ResetSecurityQuestionAsync(TEG.SSO.Entity.Param.ResetSecurityQuestion)">
            <summary>
            重置密保问题
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="T:TEG.SSO.WebAPI.Filter.CustomAuthorizeAttribute">
            <summary>
            权限过滤器
            </summary>
        </member>
        <member name="F:TEG.SSO.WebAPI.Filter.CustomAuthorizeAttribute.ActionCode">
            <summary>
            功能项码
            </summary>
        </member>
        <member name="F:TEG.SSO.WebAPI.Filter.CustomAuthorizeAttribute.Description">
            <summary>
            文本说明
            </summary>
        </member>
        <member name="F:TEG.SSO.WebAPI.Filter.CustomAuthorizeAttribute.Verify">
            <summary>
            是否启用token验证
            </summary>
        </member>
        <member name="F:TEG.SSO.WebAPI.Filter.CustomAuthorizeAttribute.CheckPermission">
            <summary>
            是否进行actionCode权限验证
            </summary>
        </member>
        <member name="F:TEG.SSO.WebAPI.Filter.CustomAuthorizeAttribute._saveLog">
            <summary>
            是否记录访问日志
            </summary>
        </member>
        <member name="M:TEG.SSO.WebAPI.Filter.CustomAuthorizeAttribute.#ctor(System.Boolean)">
            <summary>
            权限验证
            </summary>
            <param name="saveLog">是否记录访问日志</param>
        </member>
        <member name="M:TEG.SSO.WebAPI.Filter.CustomAuthorizeAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            action执行后，记录日志
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:TEG.SSO.WebAPI.Filter.CustomAuthorizeAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            action执行前
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:TEG.SSO.WebAPI.Resource">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:TEG.SSO.WebAPI.Resource.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:TEG.SSO.WebAPI.Resource.Culture">
            <summary>
              重写当前线程的 CurrentUICulture 属性
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:TEG.SSO.WebAPI.Resource.EmailVerificationCode_en_US">
             <summary>
               查找类似 &lt;!DOCTYPE html&gt;
            &lt;html&gt;
            &lt;head&gt;
                &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;
                &lt;title&gt;&lt;/title&gt;
                &lt;meta charset=&quot;utf-8&quot; /&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;div id=&quot;qm_con_body&quot;&gt;
                    &lt;div id=&quot;mailContentContainer&quot; class=&quot;qmbox qm_con_body_content qqmail_webmail_only&quot; style=&quot;&quot;&gt;
                        &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;border: 1px solid #cdcdcd; width: 640px; margin:auto;font-size: 12px; color: #1E2731; line-height: 20px;&quot;&gt;
                            &lt;tbo [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <member name="P:TEG.SSO.WebAPI.Resource.EmailVerificationCode_zh_CN">
             <summary>
               查找类似 &lt;!DOCTYPE html&gt;
            &lt;html&gt;
            &lt;head&gt;
                &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;
                &lt;title&gt;&lt;/title&gt;
                &lt;meta charset=&quot;utf-8&quot; /&gt;
            &lt;/head&gt;
            &lt;body&gt;
                &lt;div id=&quot;qm_con_body&quot;&gt;
                    &lt;div id=&quot;mailContentContainer&quot; class=&quot;qmbox qm_con_body_content qqmail_webmail_only&quot; style=&quot;&quot;&gt;
                        &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;border: 1px solid #cdcdcd; width: 640px; margin:auto;font-size: 12px; color: #1E2731; line-height: 20px;&quot;&gt;
                            &lt;tbo [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
    </members>
</doc>
